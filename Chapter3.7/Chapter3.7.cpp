#include<iostream>
#include<cmath>
using namespace std;

int main()
{
	/*
	11
	0110(6 in decimal)
	0111(7 in decimal)
	------------------
	1101 = 13 in decimal

	{
	signed
	-5        // 이 숫자를 숫자 5만 이진수로 바꾸면
	0000 0101 // 맨앞 0이면 양수 1이면 음수
	보수complement(0을 1로, 1을 0으로)
	1111 1010 // 음의 정수일때 1을 더한다
	1111 1011 // <- -5


	1001 1110 // 음수이기때문에 보수로 변경
	0110 0001 // 여기에 1을 더함
	0110 0010 // => 98 => -98
	}
	signed vs unsigned
	unsigned 1001 1110 -> 2^7*1 + 2^4*1 + 2^3*1 + 2^2*1 + 2^1*1 = 128+16+8+4+2 
	signed 1011 1110 -> 라고 생각하면 맨앞 1이 음수로 

	*/

	// 10 = 2^1*1 + 2^0*0 = 2
	// 11 = 2^1*1 + 2^0*1 = 3

	// 10 = 10^1 + 0
	// 337 = 300 + 30 + 7 = 10^2 * 3 + 10^1 * 3 + 10^0 * 7
	// c++에서는 ^이 제곱이 아니다. XOR의 뜻 하지만 위에서는 주석이기때문에 제곱이라 씀

}